;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-msnui-pos" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M839.185 382.395q0 9.375-0.469 17.813t-1.406 17.813q-8.438 77.813-34.219 149.531t-65.156 137.813-90.938 127.031-111.563 117.188q-8.438 10.313-21.563 10.313-14.063 0-22.5-10.313-60-56.25-112.031-118.125t-91.875-129.375-65.625-140.156-33.281-151.406q0-7.5-0.469-14.063t-0.469-14.063q0-65.625 25.781-123.75t69.844-101.25 103.594-68.438 127.031-25.313 126.563 25.313 103.125 68.438 69.844 101.25 25.781 123.75zM513.872 528.645q30.938 0 58.125-11.719t47.344-31.406 31.875-46.406 11.719-56.719-11.719-56.719-31.875-46.406-47.344-31.406-58.125-11.719-58.125 11.719-47.813 31.406-32.344 46.406-11.719 56.719 11.719 56.719 32.344 46.406 47.813 31.406 58.125 11.719z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-wo" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M672.017812 145.524229c-43.244877-45.256695-100.849795-70.180316-162.20308-70.180316-61.352262 0-118.95718 24.923621-162.202057 70.180316-42.88058 44.876025-66.496417 104.442619-66.496417 167.727905 0 63.285285 23.615837 122.85188 66.496417 167.727905 11.970624 12.527302 25.046417 23.488947 38.99202 32.803071-47.223487 16.1058-100.818073 43.473074-147.735592 90.006853-77.78245 77.146977-117.352638 186.799243-117.61051 325.909396-0.030699 16.95412 13.68773 30.723715 30.64185 30.75646 0.020466 0 0.038886 0 0.058328 0 16.927514 0 30.66641-13.708196 30.698132-30.64185 0.291642-157.359777 54.953535-268.473323 162.46607-330.251279 81.517514-46.840771 165.102104-47.3821 166.381235-47.383123 0.045025 0 0.089028 0 0.134053 0 3.04331 0 5.982242-0.449231 8.759492-1.276062 57.370581-2.696409 110.872046-27.279269 151.621081-69.923466 42.88058-44.876025 66.495394-104.441596 66.495394-167.727905C738.514229 249.966849 714.898392 190.400254 672.017812 145.524229zM509.814732 489.762044c-92.248915 0-167.300163-79.181308-167.300163-176.50991s75.051248-176.50991 167.300163-176.50991 167.300163 79.182331 167.300163 176.50991S602.06467 489.762044 509.814732 489.762044z"  ></path>' +
    '' +
    '<path d="M761.574411 575.095462c-14.617914-8.59167-33.43138-3.706411-42.022027 10.91048s-3.706411 33.430357 10.909456 42.022027c0.240477 0.141216 25.18047 16.012679 50.718074 58.037776 25.971485 42.741411 56.931583 120.368318 56.931583 247.464867 0 16.95412 13.745035 30.699155 30.699155 30.699155s30.699155-13.745035 30.699155-30.699155C899.508786 659.322688 767.206683 578.405854 761.574411 575.095462z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-wodedingdan18" viewBox="0 0 1025 1024">' +
    '' +
    '<path d="M1014.065368 233.104 575.553368 847.936c-30.496 42.752-96.624 42.752-127.12 0L9.937368 233.104C-18.302632 193.504 17.009368 144 73.489368 144l877.024 0C1007.009368 144 1042.305368 193.504 1014.065368 233.104z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-xingxing" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M511.962649 812.437583l-238.057861 90.578971c-30.463826 11.583826-53.717436-5.443989-51.891857-38.688137l13.725606-249.728668L75.284125 419.978167c-20.84884-25.28078-11.872399-52.560076 19.37528-60.753689l246.597351-64.690348L479.443002 83.956134c17.953907-27.364231 47.085388-27.364231 65.066925 0l138.186246 210.579019 246.600421 64.690348c31.504528 8.251941 40.190351 35.472909 19.342534 60.753689L788.215414 614.599749l13.668301 249.728668c1.853208 32.95353-21.661346 50.154283-51.890834 38.688137L511.962649 812.437583 511.962649 812.437583z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-faxian" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 85.333333C277.333333 85.333333 85.333333 277.333333 85.333333 512s192 426.666667 426.666667 426.666667 426.666667-192 426.666667-426.666667S746.666667 85.333333 512 85.333333zM512 896c-211.2 0-384-172.8-384-384S300.8 128 512 128s384 172.8 384 384S723.2 896 512 896zM512 554.666667c23.466667 0 42.666667-19.2 42.666667-42.666667 0-23.466667-19.2-42.666667-42.666667-42.666667s-42.666667 19.2-42.666667 42.666667C469.333333 535.466667 488.533333 554.666667 512 554.666667zM723.2 279.466667c-2.133333 0-6.4 0-8.533333 2.133333l-275.2 108.8c-21.333333 8.533333-38.4 25.6-46.933333 46.933333l-108.8 275.2c-6.4 14.933333 4.266667 29.866667 19.2 29.866667 2.133333 0 6.4 0 8.533333-2.133333l275.2-108.8c21.333333-8.533333 38.4-25.6 46.933333-46.933333l108.8-275.2C748.8 294.4 738.133333 279.466667 723.2 279.466667zM593.066667 569.6c-4.266667 10.666667-12.8 19.2-23.466667 23.466667l-228.266667 91.733333 91.733333-228.266667c4.266667-10.666667 12.8-19.2 23.466667-23.466667l228.266667-91.733333L593.066667 569.6z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-dingdan" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M349.19 400.699l323.372 0c12.445 0 22.536-9.817 22.536-21.936 0-12.111-10.091-21.93-22.536-21.93L349.19 356.833c-12.445 0-22.536 9.819-22.536 21.93C326.654 390.88 336.744 400.699 349.19 400.699L349.19 400.699zM672.562 527.671 349.19 527.671c-12.445 0-22.536 9.818-22.536 21.935 0 12.111 10.089 21.926 22.536 21.926l323.372 0c12.445 0 22.536-9.812 22.536-21.926C695.098 537.491 685.007 527.671 672.562 527.671L672.562 527.671zM672.562 698.497 349.19 698.497c-12.445 0-22.536 9.829-22.536 21.931 0 12.131 10.089 21.93 22.536 21.93l323.372 0c12.445 0 22.536-9.799 22.536-21.93C695.098 708.326 685.007 698.497 672.562 698.497L672.562 698.497zM773.439 147.965l-60.478 0c-12.435 0-22.523 9.824-22.523 21.931 0 12.112 10.089 21.94 22.523 21.94l60.477 0c39.296 0 71.284 31.141 71.284 69.408L844.722 828.06c0 38.274-31.988 69.419-71.284 69.419L248.302 897.479c-39.285 0-71.275-31.145-71.275-69.419L177.027 261.244c0-38.268 31.99-69.408 71.275-69.408l61.269 0c12.445 0 22.535-9.829 22.535-21.94 0-12.107-10.089-21.931-22.535-21.931l-61.269 0c-64.145 0-116.334 50.813-116.334 113.279L131.968 828.06c0 62.458 52.189 113.301 116.334 113.301l525.137 0c64.156 0 116.344-50.834 116.344-113.301L889.783 261.244C889.782 198.778 837.594 147.965 773.439 147.965L773.439 147.965zM383.764 131.351l254.214 0c12.445 0 22.545-9.825 22.545-21.942 0-12.106-10.1-21.93-22.545-21.93L383.764 87.479c-12.447 0-22.536 9.824-22.536 21.93C361.228 121.526 371.317 131.351 383.764 131.351L383.764 131.351z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-tianqi" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M864 544v-64h128v64H864zM738.272 240.48l90.496-90.528 45.248 45.248-90.496 90.528-45.248-45.248zM512 768c-141.376 0-256-114.624-256-256s114.624-256 256-256 256 114.624 256 256-114.656 256-256 256z m0-448.416c-106.272 0-192.416 86.144-192.416 192.416 0 106.272 86.144 192.416 192.416 192.416 106.272 0 192.416-86.144 192.416-192.416 0-106.272-86.144-192.416-192.416-192.416zM480 32h64v128h-64V32zM149.952 195.2l45.248-45.248 90.496 90.528-45.248 45.248-90.496-90.528zM160 544H32v-64h128v64z m125.696 239.52L195.2 874.016l-45.248-45.248 90.496-90.528 45.248 45.28zM544 992h-64V864h64v128z m330.016-163.232l-45.248 45.248-90.496-90.528 45.248-45.248 90.496 90.528z" fill="" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-changyonglogo40" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M522.26 805.977c-119.952 6.503-225.484-65.708-271.489-164.157-50.558-108.175-41.025-214.985 31.162-310.305 68.815-90.875 164.47-126.976 277.749-113.446 56.231 6.718 105.806 29.805 149.025 66.485 23.45 19.915 22.926 28.814-3.071 43.731-22.59 12.969-45.292 25.734-67.762 38.908-62.13 36.396-124.643 72.162-186.047 109.757-32.882 20.119-39.46 52.222-21.082 85.525 19.884 36.018 58.43 44.404 99.27 20.791 121.358-70.18 242.307-141.060 364.048-210.582 20.144-11.502 22.356-23.203 13.405-42.693-31.49-68.574-77.871-124.899-140.016-167.036-137.326-93.105-283.85-108.022-433.898-37.297-149.691 70.561-231.003 194.467-244.519 357.766-11.201 135.382 40.311 250.002 138.028 344.331 136.242 131.516 363.933 152.207 520.427 46.479 40.748-27.522 40.748-27.522 15.484-69.554-27.318-45.439-54.425-53.886-101.849-31.15-44.873 21.502-91.386 35.477-138.86 32.437z"  ></path>' +
    '' +
    '<path d="M934.183 613.593c-2.257-32.522-19.89-58.941-35.11-86.177-4.969-8.895-12.941-5.474-20.055-1.414-27.894 15.969-55.702 32.076-83.808 47.655-11.947 6.623-14.059 14.644-7.153 26.287 16.007 26.98 31.899 54.033 47.244 81.386 6.669 11.883 14.668 14.603 26.178 7.323 16.807-10.623 34.156-20.478 50.382-31.916 14.432-10.189 22.914-24.505 22.319-43.149z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)